@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_ViewAdmin.cshtml";
}
@* @section Scripts {
    <script src="~/assets/plug/tinymce/js/tinymce/tinymce.min.js"></script>
    <script src="~/ajax/webappservice.tinymcesetting2.js?v=1.3"></script>
    <script> tinymceSettings(['#editor'], 550,"/web/assets/css/home.css"); </script>
    <script src="~/ajax/webappclient.home1.js"></script>
}
<div class="col-md-12">
    <div class="card">
        <div class="card-header p-2 bg-dark-admin d-flex align-items-center">
            <h4 class="card-title text-white mb-0 fs-3">Giao diện seo 1</h4>
        </div>
        <div class="card-body p-0 collapse show">
            <div class="card-body p-0">
                <textarea id="editor"></textarea>
                <div class="row form-group px-3">
                    <div class="col-sm-6 p-1">
                        <input class="form-check-input ml-6" type="checkbox" value="" id="IsCongKhai">
                        <label class="form-check-label" for="IsCongKhai">
                            Chế độ công khai
                        </label>
                    </div>
                    <div class="col-sm-6 text-end p-1">
                        <button type="button" class="btn btn-danger waves-effect text-end z-100" id="btnGetSeo">
                            Lấy giao diện gốc
                        </button>
                        <button type="button" class="btn btn-primary waves-effect text-end z-100" id="btnSaveData">
                            Lưu và kết thúc
                        </button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div> *@
<!-- BEGIN: Welcome Overlay -->
<link href="/css/welcome.css" rel="stylesheet" />

<div id="welcome" role="dialog" aria-modal="true">
    <canvas id="confetti"></canvas>

    <div class="welcome-card" id="welcomeCard">
        <div class="welcome-hero">
            <h1>Chào mừng bạn đến với Website SunMeical!</h1>
            <p>Hãy bắt đầu hành trình khám phá — trải nghiệm nhanh, đẹp và đầy ấn tượng.</p>

            <div class="welcome-badges">
                <span class="badge">Giao diện mới</span>
                <span class="badge">Tốc độ cao</span>
                <span class="badge">Tính năng nổi bật</span>
            </div>

            <!-- random sparkles -->
            <div id="sparklesRoot"></div>
        </div>

        <div class="welcome-side">
            <a href="/Admin/Slider/Slider" id="enterBtn" class="primary-cta"> Tiếp tục</a>
            <a href="/Admin/Slider/Slider" id="skipBtn" class="secondary"> Bỏ qua</a>
            <small style="color:rgba(255,255,255,0.6); margin-top:6px">Bạn có thể tắt màn này trong phần cài đặt.</small>
        </div>
    </div>
</div>

<script>
    // tự động đóng overlay khi click "Vào trang" hoặc "Bỏ qua"
    document.getElementById('enterBtn').addEventListener('click', closeWelcome);
    document.getElementById('skipBtn').addEventListener('click', closeWelcome);
    function closeWelcome(){
      const w = document.getElementById('welcome');
      w.style.transition = 'opacity .45s ease, transform .45s ease';
      w.style.opacity = 0;
      w.style.transform = 'scale(.995) translateY(8px)';
      setTimeout(()=> w.remove(), 500);
    }

    /* tạo sparkles ngẫu nhiên */
    (function createSparkles(){
      const root = document.getElementById('sparklesRoot');
      const count = 14;
      for(let i=0;i<count;i++){
        const s = document.createElement('div');
        s.className = 'sparkle';
        const left = Math.random()*72; // inside card area
        const top = 180 + Math.random()*260;
        s.style.left = left + '%';
        s.style.top = top + 'px';
        s.style.animationDuration = (2 + Math.random()*2.2) + 's';
        s.style.opacity = 0.8 + Math.random()*0.4;
        s.style.transform = 'translateY(0) rotate('+ (Math.random()*360) +'deg)';
        root.appendChild(s);
      }
    })();

    /* confetti đơn giản bằng canvas */
    (function confetti(){
      const canvas = document.getElementById('confetti');
      const ctx = canvas.getContext('2d');
      const DPR = Math.max(1, window.devicePixelRatio || 1);
      let W = canvas.width = window.innerWidth * DPR;
      let H = canvas.height = window.innerHeight * DPR;
      canvas.style.width = window.innerWidth + 'px';
      canvas.style.height = window.innerHeight + 'px';
      ctx.scale(DPR, DPR);

      const colors = ['#ff6b6b','#ffd93d','#6bffb8','#6bb6ff','#c56bff','#ff9fb0'];
      const pieces = [];
      const count = Math.floor(window.innerWidth/10);

      for(let i=0;i<count;i++){
        pieces.push({
          x: Math.random()*window.innerWidth,
          y: Math.random()*-window.innerHeight,
          w: 6 + Math.random()*10,
          h: 6 + Math.random()*10,
          vy: 1 + Math.random()*3,
          vx: -1 + Math.random()*2,
          r: Math.random()*360,
          vr: -3 + Math.random()*6,
          color: colors[Math.floor(Math.random()*colors.length)],
          tilt: Math.random()*15
        });
      }

      let last = performance.now();
      function render(t){
        const dt = (t-last)/16.666; last = t;
        ctx.clearRect(0,0,canvas.width,canvas.height);
        for(const p of pieces){
          p.x += p.vx * dt;
          p.y += p.vy * dt;
          p.r += p.vr * dt;
          // wrap around horizontally
          if(p.y > window.innerHeight + 40) {
            p.y = -40 - Math.random()*200;
            p.x = Math.random()*window.innerWidth;
          }
          // draw as rotated rectangle
          ctx.save();
          ctx.translate(p.x, p.y);
          ctx.rotate(p.r * Math.PI/180);
          ctx.fillStyle = p.color;
          ctx.fillRect(-p.w/2, -p.h/2, p.w, p.h);
          ctx.restore();
        }
        requestAnimationFrame(render);
      }
      requestAnimationFrame(render);

      // resize support
      window.addEventListener('resize', ()=>{
        const DPR = Math.max(1, window.devicePixelRatio || 1);
        W = canvas.width = window.innerWidth * DPR;
        H = canvas.height = window.innerHeight * DPR;
        canvas.style.width = window.innerWidth + 'px';
        canvas.style.height = window.innerHeight + 'px';
        ctx.setTransform(DPR,0,0,DPR,0,0);
      });

      // optional: burst confetti when overlay first appears (increase vy for a moment)
      setTimeout(()=> {
        for(const p of pieces){
          p.vy += Math.random()*3 + 1.6;
          p.vx += -1 + Math.random()*2;
        }
      }, 60);
    })();
</script>
<!-- END: Welcome Overlay -->
